@* @using Frontend.Models
@model Consulta
@{
    ViewBag.Title = "Consultas";
    Layout = "~/Views/Shared/_Layout.cshtml";
} *@

<style>
    .calendar_default_event,
    .calendar_default_event_inner {
        border-radius: 15px;
        color: white;
    }
</style>

<script src="~/lib/daypilot/daypilot-all.min.js" asp-append-version="true"></script>





<div class="wrap">
    <div class="col-12">
        <div class="row">
            <div class="col-2 left">

                <div id="nav"></div>
            </div>
            <div class="col-10 right">

                <div id="dp"></div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog  modal-lg ">
        <div class="modal-content">
            <div class="modal-header text-white" style="background: #2A3F54">
                <h5 class="modal-title" id="exampleModalLabel">Tomar Turno</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body m-0 p-0">
                <input id="txtid" type="hidden" value="0" />
                <div class="row m-0 p-0">
                    <div class="col-md-12 col-sm-12 m-0 p-0">
                        <div class="x_panel  pt-3">
                            <div class="x_content">
                                <div id="step-1">
                                    <form id="formNivel" class="col-12 row m-1 " style="border:solid; border-color:#256080; border-width:2px; height:325px; border-radius: 8px;">
                                        <div class="col-9 mt-1">
                                            <div class="row m-4">
                                                <div class="col-12 form-floating">
                                                    <input type="text" class="form-control form-control-sm" id="txtdescripcion" placeholder="Descripción" />
                                                    <label for="txtdescripcion">Descripción</label>
                                                </div>
                                            </div>
                                            <div class="row m-4 ">
                                                <div class="col-12  form-floating">
                                                    <select id="cbopaciente" class="form-select " name="paciente" autocomplete="off" placeholder="Paciente"></select>
                                                    <label for="cbopaciente" class="form-label pt-1">Paciente</label>
                                                </div>
                                            </div>
                                            <div class="row m-4 ">
                                                <div class="col-12  form-floating">
                                                    <select id="cbocolor" class="form-select " name="color" autocomplete="off" placeholder="Color"></select>
                                                    <label for="cbocolor" class="form-label pt-1">Color</label>
                                                </div>
                                            </div>
                                        </div>

                                    </form>

                                </div>
                            </div>
                            <!-- End SmartWizard Content -->
                        </div>
                    </div>
                </div>

            </div>
            <div class="row mt-0 p-0">
                <div class="col-12">
                    <div id="mensajeError" class="alert-danger" role="alert">
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btnCancelar" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btnAceptar" onclick="Guardar()">Guardar</button>

            </div>

        </div>
    </div>
</div>
@section scripts {
    <script>
        const pacientes = [];

        //GET PACIENTES
        jQuery.ajax({
            url: '@Url.Action("GetAllPacientes", "Paciente")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbopaciente");
                $.each(data.data, function (index, value) {
                    pacientes.push({ id: value.id, name: value.apeyNom });
                    //$("<option>").attr({ "value": value.id }).text(value.apeyNom).appendTo("#cbopaciente");
                });
            },
            error: function (error) {
                console.log(error)
            }
        });

        const colors = [
            { id: "#1066a8", name: "Azul" },
            { id: "#6aa84f", name: "Verde" },
            { id: "#f1c232", name: "Amarillo" },
            { id: "#cc0000", name: "Rojo" },
        ];

        const datepicker = new DayPilot.Navigator("nav", {
            showMonths: 3,
            skipMonths: 3,
            selectMode: "Week",
            onTimeRangeSelected: args => {
                calendar.startDate = args.day;
                calendar.update();
                calendar.events.load(`/Consulta/Events/start=${start}/end=${end}`);
            }
        });
        datepicker.init();

        const calendar = new DayPilot.Calendar("dp", {
            viewType: "Week",
            durationBarVisible: false,
            contextMenu: new DayPilot.Menu({
                items: [
                    {
                        text: "Delete",
                        onClick: async (args) => {

                            const e = args.source;
                            const { data } = await DayPilot.Http.delete(`/Consulta/DeleteEvent/${e.id()}`);
                            calendar.events.remove(e.id());
                        }
                    },
                    {
                        text: "-"
                    },
                    {
                        text: "Blue",
                        icon: "icon icon-blue",
                        color: "#1066a8",
                        onClick: (args) => { app.updateColor(args.source, args.item.color); }
                    },
                    {
                        text: "Green",
                        icon: "icon icon-green",
                        color: "#6aa84f",
                        onClick: (args) => { app.updateColor(args.source, args.item.color); }
                    },
                    {
                        text: "Yellow",
                        icon: "icon icon-yellow",
                        color: "#f1c232",
                        onClick: (args) => { app.updateColor(args.source, args.item.color); }
                    },
                    {
                        text: "Red",
                        icon: "icon icon-red",
                        color: "#cc0000",
                        onClick: (args) => { app.updateColor(args.source, args.item.color); }
                    },

                ]
            }),
            onTimeRangeSelected: async (args) => {
                const form = [
                    { name: "Text", id: "text" },
                    { name: "Color", id: "color", type: "select", options: colors },
                    { name: "Paciente", id: "IdPaciente", type: "select", options: pacientes },
                ];

                const data = {
                    texto: form[0].value,
                    color: "#1066a8",
                    start: args.start,
                    end: args.end,
                    IdPaciente: form[2].value
                };

                const modal = await DayPilot.Modal.form(form, data);
                calendar.clearSelection();

                if (modal.canceled) {
                    return;
                }
                const consulta = modal.result;
                const { data: event } = await DayPilot.Http.post("/Consulta/CreateEvent", consulta);
                calendar.events.add(consulta);
            },
            onEventMove: async (args) => {
                // const cons = {
                //     id: args.e.id(),
                //     start: args.newStart,
                //     end: args.newEnd
                // };


                const cons = {
                    texto:'movido',
                    color: "#1066a8",
                    id: args.e.id(),
                    start: DateTime.Now(),
                    end: DateTime.Now(),
                    IdPaciente: 1
                };

                console.log(cons);

                //const { data } = await DayPilot.Http.put(`/Consulta/${args.e.id()}/Move`, c);

                const { data } = await DayPilot.Http.put("/Consulta/Move", cons);
            },
            onEventResize: async (args) => {
                const params = {
                    id: args.e.id(),
                    start: args.newStart,
                    end: args.newEnd
                };
                
                const { data } = await DayPilot.Http.put(`/Consulta/events/${args.e.id()}/move`, params);
            },
            onBeforeEventRender: (args) => {
                args.data.backColor = args.data.color + "99";
                args.data.borderColor = args.data.color;
                args.data.areas = [
                    {
                        top: 6,
                        right: 6,
                        width: 20,
                        height: 20,
                        backColor: args.data.color,
                        symbol: "../icons/daypilot.svg#minichevron-down-2",
                        visibility: "Visible",
                        action: "ContextMenu",
                        style: "border-radius: 15px; cursor:pointer;"
                    }
                ];
            }
        });
        calendar.init();

        const app = {
            async updateColor(e, color) {
                const params = {
                    color: color
                };
                const { data } = await DayPilot.Http.put(`/Consulta/Events/${e.id()}/color`, params);
                e.data.color = color;
                calendar.events.update(e);
            },
            init() {
                calendar.events.load("/Consulta/Events?start=2025-06-18&end=2025-06-20");

            }
        };
        app.init();

    </script>
}