@* @page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
} *@
<style>
    .calendar_default_event,
    .calendar_default_event_inner {
        border-radius: 15px;
        color: white;
    }
</style>

<script src="~/lib/daypilot/daypilot-all.min.js" asp-append-version="true"></script>





<div class="wrap">
    <div class="col-12">
        <div class="row">
            <div class="col-2 left">
              
                   <div id="nav"></div>
            </div>
            <div class="col-10 right" >
             
                <div id="dp"></div>
            </div>
        </div>
    </div>
</div>

<script>

    const colors = [
        {id: "#1066a8", name: "Blue"},
        {id: "#6aa84f", name: "Green"},
        {id: "#f1c232", name: "Yellow"},
        {id: "#cc0000", name: "Red"},
    ];

    const datepicker = new DayPilot.Navigator("nav", {
        showMonths: 3,
        skipMonths: 3,
        selectMode: "Week",
        onTimeRangeSelected: args => {
            calendar.startDate = args.day;
            calendar.update();
            calendar.events.load("/Events/Events");
        }
    });
    datepicker.init();

    const calendar = new DayPilot.Calendar("dp", {
        viewType: "Week",
        durationBarVisible: false,
        contextMenu: new DayPilot.Menu({
            items: [
                {
                    text: "Delete",
                    onClick: async (args) => {
                        const e = args.source;
                        const {data} = await DayPilot.Http.delete(`/api/events/${e.id()}`);
                        calendar.events.remove(e.id());
                    }
                },
                {
                    text: "-"
                },
                {
                    text: "Blue",
                    icon: "icon icon-blue",
                    color: "#1066a8",
                    onClick: (args) => { app.updateColor(args.source, args.item.color); }
                },
                {
                    text: "Green",
                    icon: "icon icon-green",
                    color: "#6aa84f",
                    onClick: (args) => { app.updateColor(args.source, args.item.color); }
                },
                {
                    text: "Yellow",
                    icon: "icon icon-yellow",
                    color: "#f1c232",
                    onClick: (args) => { app.updateColor(args.source, args.item.color); }
                },
                {
                    text: "Red",
                    icon: "icon icon-red",
                    color: "#cc0000",
                    onClick: (args) => { app.updateColor(args.source, args.item.color); }
                },

            ]
        }),
        onTimeRangeSelected: async (args) => {
            const form = [
                {name: "Text", id: "text"},
                {name: "Color", id: "color", type: "select", options: colors},
            ];

            const data = {
                text: "New event",
                color: "#1066a8",
                start: args.start,
                end: args.end
            };
           
            const modal = await DayPilot.Modal.form(form, data);
            calendar.clearSelection();
             debugger;
            if (modal.canceled) {
                return;
            }
            const Event = modal.result;
            const { data: event } = await DayPilot.Http.post("/api/CreateEvent", Event);
           
            calendar.events.add(event);
        },
        onEventMove: async (args) => {
            const params = {
                id: args.e.id(),
                start: args.newStart,
                end: args.newEnd
            };
            const {data} = await DayPilot.Http.put(`/api/events/${args.e.id()}/move`, params);
        },
        onEventResize: async (args) => {
            const params = {
                id: args.e.id(),
                start: args.newStart,
                end: args.newEnd
            };
            const {data} = await DayPilot.Http.put(`/api/events/${args.e.id()}/move`, params);
        },
        onBeforeEventRender: (args) => {
             
            args.data.backColor = args.data.color + "99";
            args.data.borderColor = args.data.color;
            args.data.areas = [
                {
                    top: 6,
                    right: 6,
                    width: 20,
                    height: 20,
                    backColor: args.data.color,
                    symbol: "icons/daypilot.svg#minichevron-down-2",
                    visibility: "Visible",
                    action: "ContextMenu",
                    style: "border-radius: 15px; cursor:pointer;"
                }
            ];
        }
    });
    calendar.init();

    const app = {
        async updateColor(e, color) {
            const params = {
                color: color
            };
            alert('fff');
            const {data} = await DayPilot.Http.put(`/api/events/${e.id()}/color`, params);
            e.data.color = color;
            calendar.events.update(e);
        },
        init() {
            calendar.events.load("/api/Events");
        }
    };
    app.init();


</script>